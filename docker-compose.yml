# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.9'

services:
  api:
    image: 10.40.71.55:5000/si_171701_api
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      MONGODB_CONNECTION_STRING: "mongodb://root:example@mongodb_dev:27017/"
      DB_NAME: "171701"
    networks:
      - common_network
    ports:
      - '17172:80'
    depends_on:
      - rabbitmq
      - mongodb_dev
      
  front:
    image: 10.40.71.55:5000/si_171701_front
    build:
      context: .
      dockerfile: front/Dockerfile
    networks:
      - common_network
    depends_on:
      - api
    ports:
      - '17170:80'

  generator:
    image: 10.40.71.55:5000/si_171701_generator
    build:
      context: .
      dockerfile: generator/Dockerfile
    depends_on:
      - rabbitmq
      - mongodb_dev
    networks:
      - common_network
        
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:management
    hostname: rabbitmq.local
    ports:
      - '17171:15672'
    networks:
      common_network:
        aliases:
          - rabbitmq.local
        
  mongodb_dev:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - common_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb_dev:27017/
    networks:
      - common_network
        
networks:
  common_network:
