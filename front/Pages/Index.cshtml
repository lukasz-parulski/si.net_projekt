@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<a href="temperature.csv" download>Pobierz CSV</a>
<a href="temperature.json" download>Pobierz JSON</a>
<select name="number">
    <option value="0">Select a number</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
</select>
<form><button type="submit">Filtruj</button></form>
<a asp-page="/" asp-route-myId=1>Filtruj</a>

<div style="width:100%;margin-left: auto;margin-right: auto;">
    <canvas id="myChart"></canvas>
</div>



<div class="row">
    <table class="arrowes-table table-striped" style="width:100%;margin-left: auto;margin-right: auto;">
        <thead>

            <tr>
                <th>SensorId</th>
                <th>Value</th>
                <th>SensorType</th>
            </tr>
        </a>
        </thead>
 
        <tbody>
        @foreach (var item in Model.myList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.sensorId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.value)                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sensorType)                   
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>


@section scripts{
    <script src="~/js/Chart.js"></script>
    <script>
        var chart = new Chart(document.getElementById('myChart').getContext('2d'), {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Label)),
                datasets: [{
                    label: 'temperature',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    fill: false,
                    data: @Html.Raw(Json.Serialize(Model.Data))
                }]
            }
        });
    </script>
}