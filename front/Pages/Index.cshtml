@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div style="width:100%;margin-left: auto;margin-right: auto;">
    <canvas id="myChart"></canvas>
</div>

<div class="row">
    <table class="arrowes-table table-striped" style="width:100%;margin-left: auto;margin-right: auto;">
        <thead>
        <tr>
            <th>Date</th>
            <th>TemperatureC</th>
            <th>TemperatureF</th>
            <th>Summary</th>
        </tr>
        </thead>
 
        <tbody>
        @foreach (var item in Model.myList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.temperatureC)                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.temperatureF)                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.summary)                   
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>


@section scripts{
    <script src="~/js/Chart.js"></script>
    <script>
        var chart = new Chart(document.getElementById('myChart').getContext('2d'), {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.Label)),
                datasets: [{
                    label: 'TemperatureC',
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    fill: false,
                    data: @Html.Raw(Json.Serialize(Model.Data))
                },
                {
                    label: 'TemperatureF',
                    backgroundColor: 'rgb(55, 99, 132)',
                    borderColor: 'rgb(55, 99, 132)',
                    fill: false,
                    data: @Html.Raw(Json.Serialize(Model.DataF))
                    }]
            }
        });
    </script>
}